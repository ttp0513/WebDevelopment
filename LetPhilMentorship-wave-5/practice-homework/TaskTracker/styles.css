/* =======================================================================
   PROJECT: TaskTracker Lite — DOM + Events
   PURPOSE: Add visuals (colors, spacing, layout) to the HTML structure.

   ✅ REQUIRED CLASS NAMES:
     .header, .container, .task-item, .task-text, .btn,
     .complete, .delete, .done
   ✅ THEME CLASS:
     body.dark
======================================================================= */
@import url('https://fonts.googleapis.com/css2?family=Fascinate+Inline&family=Rubik+Puddles&display=swap');


/* STEP A: Base styles with CSS variables in :root and overrides in body.dark */
:root {
  --bg-color: #cbc8c8;
  --text-color: #333;
  --header-bg: #26210d;
  --header-text: #fff;
  --btn-bg: #ca862d;
  --btn-text: #fff;
  --task-bg: #fff;
  --task-border: #554747;
  --status-color: red;
}

body.dark {
  background-color: #26210d;
  color: #f0f0f0;
}

/* STEP B: Style .header and .container for layout */
.header {
  background-color: var(--header-bg);
  color: var(--header-text);
  padding: 1.5rem;
  text-align: center;
  margin: auto;
  border-radius: 8px;
  font-family: "Fascinate Inline", system-ui;
  font-weight: 100;
  font-style: normal;
  font-size: 26px;
}
.container {
  max-width: 650px;
  margin: 20px auto;
  padding: 1rem;
  background-color: var(--bg-color);
  color: var(--text-color);
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
  text-align: center;
}
/* STEP C: Style #taskForm, #taskInput, #addBtn, #themeBtn */
#taskForm {
  display: flex;
  gap: 0.5rem;
  justify-content: center;
  align-content: center;
}
#taskInput {
  flex: 1;
  padding: 0.6rem;
  border: 1px solid var(--task-border);
  border-radius: 4px;
  font-size: 1rem;
}
#addBtn, #themeBtn {
  padding: 0.6rem 1rem;
  border: none;
  border-radius: 4px;
  background-color: var(--btn-bg);
  color: var(--btn-text);
  cursor: pointer;
  font-size: 1rem;
}
/* STEP D: Style #status for feedback */
#status {
  background-color: var(--btn-bg);
  color: var(--btn-text);
  transition: opacity 0.3s ease;
  opacity: 1;
}

#status.hidden {
  opacity: 0;
}

/* STEP E: Style #taskList, .task-item, .task-text, and add .done */
#taskList {
  border: 1px solid var(--task-border);
  border-radius: 4px;
  list-style: none;
  position: relative;
  padding-left: 0;
}

.task-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.75rem 1rem;
  border: 1px solid var(--header-bg);
  text-align: left;
  background-color: var(--btn-text);
  word-break: break-word;
  overflow-wrap: anywhere;
  white-space: normal;
  max-width: 100%;
}

.done {
  background-color: #e0e0e0;
  color: #333;
  transition: background-color 0.3s ease, color 0.3s ease, opacity 0.3s ease;
}

.task-text {
  flex-grow: 1;
  font-size: 1rem;
  color: var(--text-main);
}

/* STEP F: Style .btn, .btn.complete, .btn.delete */
.btn {
  margin-left: 0.5rem;
  padding: 0.3rem 0.6rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.9rem;
}

.btn.complete {
  background-color: #66bb6a
;
  color: white;
}

.btn.delete {
  background-color: 
#ef5350
;
  color: white;
}

/* STEP G: Add media query for responsive stacking */
@media (max-width: 600px) {
  .task-item {
    flex-direction: column;
    align-items: flex-start;
  }

  .btn-group {
    margin-top: 0.5rem;
  }
}